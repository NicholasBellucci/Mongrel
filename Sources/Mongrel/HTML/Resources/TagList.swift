/// Represents the HTML ``<abbr>`` tag.
public let Abbreviation = Node(tag: "abbr")
/// Represents the HTML ``<address>`` tag.
public let Address = Node(tag: "address")
/// Represents the HTML ``<a>`` tag.
public let Anchor = Node(tag: "a")
/// Represents the HTML ``<article>`` tag.
public let Article = Node(tag: "article")
/// Represents the HTML ``<aside>`` tag.
public let Aside = Node(tag: "aside")
/// Represents the HTML ``<audio>`` tag.
public let Audio = Node(tag: "audio")
/// Represents the HTML ``<base>`` tag.
public let Base = Node(tag: "base", isEmpty: true)
/// Represents the HTML ``<bdi>`` tag.
public let BidirectionalIsolate = Node(tag: "bdi")
/// Represents the HTML ``<bdo>`` tag.
public let BidirectionalTextOverride  = Node(tag: "bdo")
/// Represents the HTML ``<blockquote>`` tag.
public let BlockQuotation = Node(tag: "blockquote")
/// Represents the HTML ``<body>`` tag.
public let Body = Node(tag: "body")
/// Represents the HTML ``<button>`` tag.
public let Button = Node(tag: "button")
/// Represents the HTML ``<canvas>`` tag.
public let Canvas = Node(tag: "canvas")
/// Represents the HTML ``<caption>`` tag.
public let Caption = Node(tag: "caption")
/// Represents the HTML ``<cite>`` tag.
public let Citation = Node(tag: "cite")
/// Represents the HTML ``<col>`` tag.
public let Column = Node(tag: "col", isEmpty: true)
/// Represents the HTML ``<colgroup>`` tag.
public let ColumnGroup = Node(tag: "colgroup")
/// Represents the HTML ``<data>`` tag.
public let Data = Node(tag: "data")
/// Represents the HTML ``<dfn>`` tag.
public let Definition = Node(tag: "dfn")
/// Represents the HTML ``<dd>`` tag.
public let DescriptionDetails = Node(tag: "dd")
/// Represents the HTML ``<dt>`` tag.
public let DescriptionTerm = Node(tag: "dt")
/// Represents the HTML ``<details>`` tag.
public let Details = Node(tag: "details")
/// Represents the HTML ``<dialog>`` tag.
public let Dialog = Node(tag: "dialog")
/// Represents the HTML ``<div>`` tag.
public let Division = Node(tag: "div")
/// Represents the HTML ``<embed>`` tag.
public let Embed = Node(tag: "embed", isEmpty: true)
/// Represents the HTML ``<fieldset>`` tag.
public let FieldSet = Node(tag: "fieldset")
/// Represents the HTML ``<figure>`` tag.
public let Figure = Node(tag: "figure")
/// Represents the HTML ``<figcaption>`` tag.
public let FigureCaption = Node(tag: "figcaption")
/// Represents the HTML ``<footer>`` tag.
public let Footer = Node(tag: "footer")
/// Represents the HTML ``<form>`` tag.
public let Form = Node(tag: "form")
/// Represents the HTML ``<html>`` tag.
public let Root = Node(tag: "html")
/// Represents the HTML ``<head>`` tag.
public let Head = Node(tag: "head")
/// Represents the HTML ``<header>`` tag.
public let Header = Node(tag: "header")
/// Represents the HTML ``<h1>`` tag.
public let Heading1 = Node(tag: "h1")
/// Represents the HTML ``<h2>`` tag.
public let Heading2 = Node(tag: "h2")
/// Represents the HTML ``<h3>`` tag.
public let Heading3 = Node(tag: "h3")
/// Represents the HTML ``<h4>`` tag.
public let Heading4 = Node(tag: "h4")
/// Represents the HTML ``<h5>`` tag.
public let Heading5 = Node(tag: "h5")
/// Represents the HTML ``<h6>`` tag.
public let Heading6 = Node(tag: "h6")
/// Represents the HTML ``<hr>`` tag.
public let HorizontalRule = Node(tag: "hr", isEmpty: true)
/// Represents the HTML ``<iframe>`` tag.
public let IFrame = Node(tag: "iframe")
/// Represents the HTML ``<code>`` tag.
public let InlineCode = Node(tag: "code")
/// Represents the HTML ``<input>`` tag.
public let Input = Node(tag: "input", isEmpty: true)
/// Represents the HTML ``<kbd>`` tag.
public let KeyboardIput = Node(tag: "kbd")
/// Represents the HTML ``<label>`` tag.
public let Label = Node(tag: "label")
/// Represents the HTML ``<legend>`` tag.
public let Legend = Node(tag: "legend")
/// Represents the HTML ``<link>`` tag.
public let Link = Node(tag: "link", isEmpty: true)
/// Represents the HTML ``<li>`` tag.
public let ListItem = Node(tag: "li")
/// Represents the HTML ``<main>`` tag.
public let Main = Node(tag: "main")
/// Represents the HTML ``<map>`` tag.
public let Map = Node(tag: "map")
/// Represents the HTML ``<meta>`` tag.
public let Metadata = Node(tag: "meta", isEmpty: true)
/// Represents the HTML ``<meter>`` tag.
public let Meter = Node(tag: "meter")
/// Represents the HTML ``<nav>`` tag.
public let Navigation = Node(tag: "nav")
/// Represents the HTML ``<noscript>`` tag.
public let NoScript = Node(tag: "noscript")
/// Represents the HTML ``<object>`` tag.
public let Object = Node(tag: "object")
/// Represents the HTML ``<option>`` tag.
public let Option = Node(tag: "option")
/// Represents the HTML ``<optgroup>`` tag.
public let OptionGroup = Node(tag: "optgroup")
/// Represents the HTML ``<output>`` tag.
public let Output = Node(tag: "output")
/// Represents the HTML ``<p>`` tag.
public let Paragraph = Node(tag: "p")
/// Represents the HTML ``<param>`` tag.
public let Parameter = Node(tag: "param", isEmpty: true)
/// Represents the HTML ``<picture>`` tag.
public let Picture = Node(tag: "picture")
/// Represents the HTML ``<pre>`` tag.
public let PreformattedText = Node(tag: "pre")
/// Represents the HTML ``<progress>`` tag.
public let Progress = Node(tag: "progress")
/// Represents the HTML ``<q>`` tag.
public let Quotation = Node(tag: "q")
/// Represents the HTML ``<ruby>`` tag.
public let Ruby = Node(tag: "ruby")
/// Represents the HTML ``<rp>`` tag.
public let RubyParenthesis = Node(tag: "rp")
/// Represents the HTML ``<rt>`` tag.
public let RubyText = Node(tag: "rt")
/// Represents the HTML ``<samp>`` tag.
public let SampleOutput = Node(tag: "samp")
/// Represents the HTML ``<script>`` tag.
public let Script = Node(tag: "script")
/// Represents the HTML ``<section>`` tag.
public let Section = Node(tag: "section")
/// Represents the HTML ``<select>`` tag.
public let Select = Node(tag: "select")
/// Represents the HTML ``<span>`` tag.
public let Span = Node(tag: "span")
/// Represents the HTML ``<style>`` tag.
public let Style = Node(tag: "style")
/// Represents the HTML ``<summary>`` tag.
public let Summary = Node(tag: "summary")
/// Represents the HTML ``<table>`` tag.
public let Table = Node(tag: "table")
/// Represents the HTML ``<tbody>`` tag.
public let TableBody = Node(tag: "tbody")
/// Represents the HTML ``<th>`` tag.
public let TableCellHeader = Node(tag: "th")
/// Represents the HTML ``<td>`` tag.
public let TableData = Node(tag: "td")
/// Represents the HTML ``<tfoot>`` tag.
public let TableFooter = Node(tag: "tfoot")
/// Represents the HTML ``<thead>`` tag.
public let TableHeader = Node(tag: "thead")
/// Represents the HTML ``<tr>`` tag.
public let TableRow = Node(tag: "tr")
/// Represents the HTML ``<template>`` tag.
public let Template = Node(tag: "template")
/// Represents the HTML ``<textarea>`` tag.
public let TextArea = Node(tag: "textarea")
/// Represents the HTML ``<time>`` tag.
public let Time = Node(tag: "time")
/// Represents the HTML ``<title>`` tag.
public let Title = Node(tag: "title")
/// Represents the HTML ``<track>`` tag.
public let Track = Node(tag: "track", isEmpty: true)
/// Represents the HTML ``<var>`` tag.
public let Variable = Node(tag: "var")
/// Represents the HTML ``<video>`` tag.
public let Video = Node(tag: "video")
/// Represents the HTML ``<wbr>`` tag.
public let WordBreak = Node(tag: "wbr", isEmpty: true)
